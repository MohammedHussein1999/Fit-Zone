{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/middleware.js"],"sourcesContent":["export {auth as middleware} from 'auth'\r\n\r\n// middleware.js\r\n// import { NextResponse } from \"next/server\";\r\n// import jwt from \"jsonwebtoken\";\r\n\r\n// // Define protected and public routes\r\n// const protectedRoutes = [\"/dashboard\"];\r\n// const publicPaths = [\"/login\", \"/register\"];\r\n\r\n// export function middleware(request) {\r\n//   const { cookies } = request;\r\n//   const token = cookies.token;\r\n// console.log(request)\r\n//   const url = request.nextUrl.clone();\r\n\r\n//   // Protecting Routes\r\n//   if (\r\n//     protectedRoutes.some((route) => request.nextUrl.pathname.startsWith(route))\r\n//   ) {\r\n//     if (!token) {\r\n//       url.pathname = \"/login\";\r\n//       return NextResponse.redirect(url);\r\n//     }\r\n\r\n//     try {\r\n//       jwt.verify(token, process.env.JWT_SECRET);\r\n//       return NextResponse.next();\r\n//     } catch (error) {\r\n//       url.pathname = \"/login\";\r\n//       return NextResponse.redirect(url);\r\n//     }\r\n//   }\r\n\r\n//   // Prevent authenticated users from accessing login/register\r\n//   if (publicPaths.some((path) => request.nextUrl.pathname === path)) {\r\n//     if (token) {\r\n//       try {\r\n//         jwt.verify(token, process.env.JWT_SECRET);\r\n//         url.pathname = \"/dashboard\";\r\n//         return NextResponse.redirect(url);\r\n//       } catch (error) {\r\n//         // Invalid token, proceed to public page\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   // Allow all other requests\r\n//   return NextResponse.next();\r\n// }\r\n\r\n// export const config = {\r\n//   matcher: [\"/dashboard\", \"/login\", \"/register\", \"/protected/:path*\"],\r\n// };\r\n"],"names":[],"mappings":";;;AAAA,gLAEA,gBAAgB;CAChB,8CAA8C;CAC9C,kCAAkC;CAElC,wCAAwC;CACxC,0CAA0C;CAC1C,+CAA+C;CAE/C,wCAAwC;CACxC,iCAAiC;CACjC,iCAAiC;CACjC,uBAAuB;CACvB,yCAAyC;CAEzC,yBAAyB;CACzB,SAAS;CACT,kFAAkF;CAClF,QAAQ;CACR,oBAAoB;CACpB,iCAAiC;CACjC,2CAA2C;CAC3C,QAAQ;CAER,YAAY;CACZ,mDAAmD;CACnD,oCAAoC;CACpC,wBAAwB;CACxB,iCAAiC;CACjC,2CAA2C;CAC3C,QAAQ;CACR,MAAM;CAEN,iEAAiE;CACjE,yEAAyE;CACzE,mBAAmB;CACnB,cAAc;CACd,qDAAqD;CACrD,uCAAuC;CACvC,6CAA6C;CAC7C,0BAA0B;CAC1B,mDAAmD;CACnD,UAAU;CACV,QAAQ;CACR,MAAM;CAEN,gCAAgC;CAChC,gCAAgC;CAChC,IAAI;CAEJ,0BAA0B;CAC1B,yEAAyE;CACzE,KAAK"}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}