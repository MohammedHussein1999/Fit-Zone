{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/config/auth.config.js"],"sourcesContent":["export const authConfig = {\r\n  pages: {\r\n    signIn: \"/login\",\r\n  },\r\n  session: {\r\n    strategy: \"jwt\",\r\n    maxAge: 10 * 24 * 60 * 60,\r\n  },\r\n  secret: process.env.SECRET,\r\n  provider: [],\r\n};\r\n"],"names":[],"mappings":";;;AAAO,MAAM,aAAa;IACxB,OAAO;QACL,QAAQ;IACV;IACA,SAAS;QACP,UAAU;QACV,QAAQ,KAAK,KAAK,KAAK;IACzB;IACA,QAAQ,QAAQ,GAAG,CAAC,MAAM;IAC1B,UAAU,EAAE;AACd"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/auth.js"],"sourcesContent":["import { error } from \"firebase-functions/logger\";\r\nimport { authConfig } from \"./config/auth.config\"; \r\nimport NextAuth, { AuthError } from \"next-auth\";\r\nimport Credential from \"next-auth/providers/credentials\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\nexport const { handlers, signIn, signOut, auth } = NextAuth({\r\n  ...authConfig,\r\n  providers: [\r\n    Credential({\r\n      authorize: async (credentials) => {\r\n        const res = await fetch(\r\n          `http://localhost:4000/users?email=${credentials.email}`\r\n        );\r\n        const userData = await res.json();\r\n\r\n        if (!userData || userData.length === 0) {\r\n          const customError = new AuthError( {\r\n            cause: {\r\n            error:\"user Not found\"\r\n          }});\r\n          throw customError;\r\n        }\r\n\r\n        return {\r\n          user: userData[0],\r\n          email: userData[0]?.email,\r\n        };\r\n      },\r\n    }),\r\n  ],\r\n  callbacks: {\r\n    async signIn({ user, account, profile }) {\r\n      if (user) {\r\n        console.log(\"User signed in:\", user);\r\n        return \"/home\"; \r\n      }\r\n      return false;\r\n    },\r\n    debug: true,\r\n  }\r\n});\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AAFA;AACA;AADA;;;;;;AAIO,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,UAAQ,AAAD,EAAE;IAC1D,GAAG,+HAAA,CAAA,aAAU;IACb,WAAW;QACT,CAAA,GAAA,0JAAA,CAAA,UAAU,AAAD,EAAE;YACT,WAAW,OAAO;gBAChB,MAAM,MAAM,MAAM,MAChB,CAAC,kCAAkC,EAAE,YAAY,KAAK,EAAE;gBAE1D,MAAM,WAAW,MAAM,IAAI,IAAI;gBAE/B,IAAI,CAAC,YAAY,SAAS,MAAM,KAAK,GAAG;oBACtC,MAAM,cAAc,IAAI,wIAAA,CAAA,YAAS,CAAE;wBACjC,OAAO;4BACP,OAAM;wBACR;oBAAC;oBACD,MAAM;gBACR;gBAEA,OAAO;oBACL,MAAM,QAAQ,CAAC,EAAE;oBACjB,OAAO,QAAQ,CAAC,EAAE,EAAE;gBACtB;YACF;QACF;KACD;IACD,WAAW;QACT,MAAM,QAAO,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE;YACrC,IAAI,MAAM;gBACR,QAAQ,GAAG,CAAC,mBAAmB;gBAC/B,OAAO;YACT;YACA,OAAO;QACT;QACA,OAAO;IACT;AACF"}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/lib/routes.js"],"sourcesContent":["export const login = '/login'\r\nexport const ROOT = '/'\r\n\r\nexport const PUBLIC_ROUTE = [ \"/login\"];\r\nexport const PRIVTE_ROUTE = [\"/home\"];\r\nexport const POTECTED_ROUTE = [\"/dashboard\"];"],"names":[],"mappings":";;;;;;;AAAO,MAAM,QAAQ;AACd,MAAM,OAAO;AAEb,MAAM,eAAe;IAAE;CAAS;AAChC,MAAM,eAAe;IAAC;CAAQ;AAC9B,MAAM,iBAAiB;IAAC;CAAa"}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/middleware.js"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { auth } from \"./auth\";\r\nimport { login, POTECTED_ROUTE, PUBLIC_ROUTE, ROOT } from \"./lib/routes\";\r\n\r\nexport const middleware = async ({ nextUrl }) => {\r\n  const session = await auth();\r\n  const isAuth = !!session?.user;\r\n  const isPublice =\r\n    PUBLIC_ROUTE.find((route) => nextUrl.pathname.startsWith(route)) ||\r\n    (nextUrl.pathname === ROOT &&\r\n      !POTECTED_ROUTE.find((route) => nextUrl.pathname.includes(route)));\r\n\r\n  if (!isAuth && !isPublice) {\r\n    return NextResponse.redirect(new URL(\"/login\", nextUrl));\r\n  } \r\n};\r\n\r\nexport const config = {\r\n  matcher: [\"/((?!api|_next/static|_next/image|.*\\\\.png$).*)\", \"/home\"],\r\n\r\n};\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAFA;;;;AAIO,MAAM,aAAa,OAAO,EAAE,OAAO,EAAE;IAC1C,MAAM,UAAU,MAAM,CAAA,GAAA,2GAAA,CAAA,OAAI,AAAD;IACzB,MAAM,SAAS,CAAC,CAAC,SAAS;IAC1B,MAAM,YACJ,oHAAA,CAAA,eAAY,CAAC,IAAI,CAAC,CAAC,QAAU,QAAQ,QAAQ,CAAC,UAAU,CAAC,WACxD,QAAQ,QAAQ,KAAK,oHAAA,CAAA,OAAI,IACxB,CAAC,oHAAA,CAAA,iBAAc,CAAC,IAAI,CAAC,CAAC,QAAU,QAAQ,QAAQ,CAAC,QAAQ,CAAC;IAE9D,IAAI,CAAC,UAAU,CAAC,WAAW;QACzB,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU;IACjD;AACF;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;QAAmD;KAAQ;AAEvE"}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}