{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/config/auth.confg.js"],"sourcesContent":["export const authConfig = {\r\n  pages: {\r\n    signIn: \"/login\",\r\n  },\r\n  session: {\r\n    strategy: \"jwt\",\r\n    maxAge: 10 * 24 * 60 * 60,\r\n  },\r\n  secret: process.env.SECRET,\r\n  provider: [],\r\n};\r\n"],"names":[],"mappings":";;;AAAO,MAAM,aAAa;IACxB,OAAO;QACL,QAAQ;IACV;IACA,SAAS;QACP,UAAU;QACV,QAAQ,KAAK,KAAK,KAAK;IACzB;IACA,QAAQ,QAAQ,GAAG,CAAC,MAAM;IAC1B,UAAU,EAAE;AACd"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/auth.js"],"sourcesContent":["import { authConfig } from \"./config/auth.confg\";\r\nimport NextAuth from \"next-auth\";\r\nimport Credential from \"next-auth/providers/credentials\";\r\n\r\nexport const { handlers, signIn, signOut, auth } = NextAuth({\r\n  ...authConfig,\r\n  providers: [\r\n    Credential({\r\n      authorize: async (credentials) => {\r\n        console.log(\"ðŸš€ ~ authorize: ~ credintal:\", credentials);\r\n        return { user: \"ramez ahmed\", email: \"ramezahmed@gmail.com\" };\r\n      },\r\n    }),\r\n  ],\r\n});\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AADA;AACA;;;;AAEO,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,UAAQ,AAAD,EAAE;IAC1D,GAAG,8HAAA,CAAA,aAAU;IACb,WAAW;QACT,CAAA,GAAA,0JAAA,CAAA,UAAU,AAAD,EAAE;YACT,WAAW,OAAO;gBAChB,QAAQ,GAAG,CAAC,gCAAgC;gBAC5C,OAAO;oBAAE,MAAM;oBAAe,OAAO;gBAAuB;YAC9D;QACF;KACD;AACH"}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/middleware.js"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { auth } from \"./auth\";\r\nimport { PUBLIC_ROUTE } from \"./lib/routes\";\r\n\r\nexport const middleware = async({ url}) => {\r\n  const session = await auth();\r\n  const isAuth = !!session?.user; \r\n  const isPublice =   (PUBLIC_ROUTE)\r\n\r\n}\r\n\r\n\r\n\r\nexport const config = {\r\n  matcher: [\"/((?!api|_next/static|_next/image|.*\\\\.png$).*)\",'/home'],\r\n};\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEO,MAAM,aAAa,OAAM,EAAE,GAAG,EAAC;IACpC,MAAM,UAAU,MAAM,CAAA,GAAA,2GAAA,CAAA,OAAI,AAAD;IACzB,MAAM,SAAS,CAAC,CAAC,SAAS;IAC1B,MAAM,YAAe,oHAAA,CAAA,eAAY;AAEnC;AAIO,MAAM,SAAS;IACpB,SAAS;QAAC;QAAkD;KAAQ;AACtE"}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}