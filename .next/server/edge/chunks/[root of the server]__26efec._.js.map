{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/middleware.js"],"sourcesContent":["// middleware.js\r\nimport { NextResponse } from \"next/server\";\r\nimport jwt from \"jsonwebtoken\";\r\n\r\n// Define protected and public routes\r\nconst protectedRoutes = [\"/dashboard\"];\r\nconst publicPaths = [\"/login\", \"/register\"];\r\n\r\nexport function middleware(request) {\r\n  const { cookies } = request;\r\n  const token = cookies.token;\r\nconsole.log(request)\r\n  const url = request.nextUrl.clone();\r\n\r\n  // Protecting Routes\r\n  if (\r\n    protectedRoutes.some((route) => request.nextUrl.pathname.startsWith(route))\r\n  ) {\r\n    if (!token) {\r\n      url.pathname = \"/login\";\r\n      return NextResponse.redirect(url);\r\n    }\r\n\r\n    try {\r\n      jwt.verify(token, process.env.JWT_SECRET);\r\n      return NextResponse.next();\r\n    } catch (error) {\r\n      url.pathname = \"/login\";\r\n      return NextResponse.redirect(url);\r\n    }\r\n  }\r\n\r\n  // Prevent authenticated users from accessing login/register\r\n  if (publicPaths.some((path) => request.nextUrl.pathname === path)) {\r\n    if (token) {\r\n      try {\r\n        jwt.verify(token, process.env.JWT_SECRET);\r\n        url.pathname = \"/dashboard\";\r\n        return NextResponse.redirect(url);\r\n      } catch (error) {\r\n        // Invalid token, proceed to public page\r\n      }\r\n    }\r\n  }\r\n\r\n  // Allow all other requests\r\n  return NextResponse.next();\r\n}\r\n\r\nexport const config = {\r\n  matcher: [\"/dashboard\", \"/login\", \"/register\", \"/protected/:path*\"],\r\n};\r\n"],"names":[],"mappings":"AAAA,gBAAgB;;;;;AAChB;AACA;AADA;;;AAGA,qCAAqC;AACrC,MAAM,kBAAkB;IAAC;CAAa;AACtC,MAAM,cAAc;IAAC;IAAU;CAAY;AAEpC,SAAS,WAAW,OAAO;IAChC,MAAM,EAAE,OAAO,EAAE,GAAG;IACpB,MAAM,QAAQ,QAAQ,KAAK;IAC7B,QAAQ,GAAG,CAAC;IACV,MAAM,MAAM,QAAQ,OAAO,CAAC,KAAK;IAEjC,oBAAoB;IACpB,IACE,gBAAgB,IAAI,CAAC,CAAC,QAAU,QAAQ,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,SACpE;QACA,IAAI,CAAC,OAAO;YACV,IAAI,QAAQ,GAAG;YACf,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;QAC/B;QAEA,IAAI;YACF,qIAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO,QAAQ,GAAG,CAAC,UAAU;YACxC,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;QAC1B,EAAE,OAAO,OAAO;YACd,IAAI,QAAQ,GAAG;YACf,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;QAC/B;IACF;IAEA,4DAA4D;IAC5D,IAAI,YAAY,IAAI,CAAC,CAAC,OAAS,QAAQ,OAAO,CAAC,QAAQ,KAAK,OAAO;QACjE,IAAI,OAAO;YACT,IAAI;gBACF,qIAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO,QAAQ,GAAG,CAAC,UAAU;gBACxC,IAAI,QAAQ,GAAG;gBACf,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;YAC/B,EAAE,OAAO,OAAO;YACd,wCAAwC;YAC1C;QACF;IACF;IAEA,2BAA2B;IAC3B,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;QAAc;QAAU;QAAa;KAAoB;AACrE"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}